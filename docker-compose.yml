version: '3'

# defined docker network for operating systems
networks:
  mynetwork:
    ipam:
      config:
        - subnet: 172.20.0.0/24


services:

  # Ansible controller
  ansible:
    image: mbwali/centos7-ansible:latest
    restart: always
    hostname: ansible.example.com
    container_name: ansible
    privileged: true
    cap_add:
      - ALL
    # TODO - add via dockerfile
    extra_hosts:
      - "${NODE_C}"
      - "${NODE_A}"
      - "${NODE_B}"
    tty: true
    networks:
      mynetwork:
        ipv4_address: 172.20.0.7

  # K8 nodeone
  nodeone:
    image: mbwali/centos7-vms:latest
    restart: always
    hostname: nodeone.example.com
    container_name: nodeone
    privileged: true
    cap_add:
      - ALL
    # TODO - add via dockerfile
    extra_hosts:
      - "${NODE_C}"
      - "${ANSIBLE}"
      - "${NODE_B}"
    tty: true
    volumes:
      - /lib/modules:/lib/modules
    networks:
      mynetwork:
        ipv4_address: 172.20.0.8

  # K8 nodetwo
  nodetwo:
    image: mbwali/centos7-vms:latest
    restart: always
    hostname: nodetwo.example.com
    container_name: nodetwo
    privileged: true
    cap_add:
      - ALL
    # TODO - add via dockerfile
    extra_hosts:
      - "${NODE_C}"
      - "${ANSIBLE}"
      - "${NODE_A}"
    tty: true
    volumes:
      - /lib/modules:/lib/modules
    networks:
      mynetwork:
        ipv4_address: 172.20.0.9

  # nodethree
  nodethree:
    image: mbwali/centos7-vms:latest
    restart: always
    hostname: nodethree.example.com
    container_name: nodethree
    privileged: true
    cap_add:
      - ALL
    # TODO - add via dockerfile
    extra_hosts:
      - "${ANSIBLE}"
      - "${NODE_A}"
      - "${NODE_B}"
    tty: true
    volumes:
      - /lib/modules:/lib/modules
    networks:
      mynetwork:
        ipv4_address: 172.20.0.6